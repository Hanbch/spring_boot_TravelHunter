<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.hi.prj.mapper.PlaceMapper">
    <!-- 캠핑장 예약페이지 (place테이블 정보 + 평균평점 + 대표가격 + 대표이미지) -->
   	<select id="getPlaceData" resultType="PlaceVO">
       <![CDATA[
			select * from 
             place,
             (select p.num,round(avg(bgrade),1) placeAvgGrade from place p,board b where p.num = b.place_num(+) group by p.num order by p.num desc)A 
         where place.num = A.num(+) order by place.num desc
       ]]>
    </select>
    
    <select id="hotPlaceList" resultType="PlaceVO">
       <![CDATA[
			select * from 
             	place,
             	(select p.num,nvl(round(avg(bgrade),1),0) placeAvgGrade from place p,board b where p.num = b.place_num(+) group by p.num order by p.num desc)A 
         	where place.num = A.num(+) order by placeavggrade desc
       ]]>
    </select>
    
    <!-- 캠핑장별 매출정보가져오기 -->
    <select id="getSales" resultType="StaticsVO">
       <![CDATA[
       		
       		select C.month ,nvl(price,0) price from 
				(select TO_CHAR(enddate, 'mm')month, sum(totalprice) price from booking where place_num = #{place_num} and enddate between '2022-01-01' and '2022-12-31' group by TO_CHAR(enddate, 'mm'))S,
				(select 01 month from dual UNION ALL
				select 02 month from dual UNION ALL
				select 03 month from dual UNION ALL
				select 04 month from dual UNION ALL
				select 05 month from dual UNION ALL
				select 06 month from dual UNION ALL
				select 07 month from dual UNION ALL
				select 08 month from dual UNION ALL
				select 09 month from dual UNION ALL
				select 10 month from dual UNION ALL
				select 11 month from dual UNION ALL
				select 12 month from dual)C
			where S.month(+) = C.month order by C.month
       ]]>
    </select>
    
    <!-- 캠핑장예약 상세 페이지 -->
    <!-- 해당 캠핑장 모든객실 이미지 -->
    <select id="getPlaceDetailImg" resultType="String">
       <![CDATA[ 
           select iname inameList from 
           		place p,
           		room r,
           		image i 
           	where p.num = r.place_num and i.room_num = r.num and p.num = #{num}
       ]]>
    </select>
  	
  	<resultMap id="getPlaceDetailImg" type="String">
      <result property="inameList" column="inameList"/>    
  	</resultMap>
  
    <resultMap id="placeDetailMap" type="PlaceDetailVO">
      <id property="num" column="num"/>
      <result property="member_id" column="member_id"/>
      <result property="pname" column="pname"/>
      <result property="location" column="location"/>
      <result property="pphone" column="pphone"/>
      <result property="review" column="review"/>
      <result property="grade" column="grade"/>
      <result property="mainimg" column="mainimg"/>
      <collection property="inameList" resultMap="getPlaceDetailImg"></collection>
   	</resultMap>
   	
   	<select id="getPlaceDetail" resultMap="placeDetailMap">
       <![CDATA[
     		select p.num, p.member_id,p.pname, location, pphone, review, grade, mainimg,iname inameList from 
			    place P,
			    (select p.num,count(b.id)review from place p,board b where p.num = b.place_num(+) and p.num = #{num} group by p.num)R,
			    (select round(avg(bgrade),1)grade from place p,board b,room r where p.num = b.place_num(+) and p.num = r.place_num and p.num = #{num} group by p.num)G,
			    (select iname from place p,room r,image i where p.num = r.place_num and i.room_num(+) = r.num and p.num = #{num})I
			where P.num = R.num
       ]]>
    </select>
    
    <!-- 캠핑장등록 -->
    <insert id="registerPlace" >
       <![CDATA[
           insert into place (num, member_id, pname, location, pphone, mainimg)
            values (place_seq.nextval, #{member_id}, #{pname}, #{location}, #{pphone},#{mainimg})
       ]]>
    </insert>
    
    <insert id="registerPlace_Type" >
       <![CDATA[
       		insert into place_type (place_num, place_type_group_num) select #{place_num}, #{place_type_group_num} from dual
   			 	where not exists 
   			 (select place_type_group_num from place_type where place_num = #{place_num} and place_type_group_num = #{place_type_group_num})
       ]]>
    </insert>
    
    <insert id="registerRoom" >
       <![CDATA[
           insert into room (num, place_num, price, capacity, rinfo, rname)
            values (room_seq.nextval, #{place_num}, #{price}, #{capacity}, #{rinfo}, #{rname})
       ]]>
    </insert>
    
    <insert id="imginsert" >
       <![CDATA[
           insert into image(num, room_num, image_type_num, iname, ioriname, ipath)
				values(image_seq.nextval, room_seq.currval, 0, #{iname}, #{ioriname}, #{ipath})
       ]]>
    </insert>
    
    <!-- 필터링한캠핑장번호 -->
    <select id="filtering" resultType="FilteringVO">
       <![CDATA[ 
			select p.num,min(price) price from 
				place p,
				place_type pt,
				(select place_num,min(price) price from room r where capacity >= #{capacity} and r.price >= 0 and r.num 
			    	not in (
			        	(select distinct r.num from room r, reserved rsv where r.num = rsv.room_num and rdate between to_date(#{startdate},'mm-dd-yy') and to_date(#{enddate},'mm-dd-yy')-1)
			        ) 
			    group by place_num)R
			where p.num = pt.place_num and pt.place_num = R.place_num and place_type_group_num like #{place_type_group_num} and location like #{location} group by p.num order by p.num desc
       ]]>
    </select>
    
    <!-- 매니저별 캠핑장 조회 -->
    <select id="getMyPlaceList" resultType="PlaceDetailVO">
       <![CDATA[ 
			select * from 
			    place p,
			    (select p.num,round(avg(bgrade),1) grade from place p, board b where p.num = b.place_num(+) and p.member_id = #{member_id} group by p.num)A
			where p.num = A.num order by p.num
         ]]>
    </select>
    
    <!-- 해당 캠핑장정보 조회 -->
    <select id="getMyPlaceData" resultType="PlaceVO">
       <![CDATA[ 
			select * from place where num = #{num}
         ]]>
    </select>
    
    <update id="updatePlace">
       <![CDATA[ 
           update place set 
           		pname = #{pname},
           		location = #{location},
           		pphone = #{pphone}
            where num = #{num}
       ]]>
    </update> 
    
     
    
</mapper>
